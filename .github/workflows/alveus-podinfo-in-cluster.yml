name: podinfo-in-cluster
"on":
  workflow_call: {}
  workflow_dispatch: {}
concurrency:
  group: in-cluster
defaults:
  run:
    shell: bash
jobs:
  in-cluster:
    name: in-cluster
    runs-on:
    - ubuntu-latest
    env:
      ARGOCD_APPLICATION_FILE: .alveus/applications/podinfo-in-cluster.yaml
      ARGOCD_APPLICATION_NEW_TARGET_REVISION: 123new
      GIT_COMMIT_MESSAGE: "feat: ðŸš€ deploy to in-cluster"
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false
        ref: ""
    - uses: jdx/mise-action@v3
      with:
        version: 2025.10.17
    - name: create-kube-config
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG_B64 }}" | base64 -d > ~/.kube/config
    - name: git-config
      run: |-
        git config --global user.name '${{ github.actor }}'
        git config --global user.email '${{ github.actor }}@users.noreply.github.com'
    - uses: frenck/action-setup-yq@v1
    - name: update-application-yaml
      run: |-
        yq e '.spec.source.targetRevision = "${{ env.ARGOCD_APPLICATION_NEW_TARGET_REVISION }}"' \
        '${ARGOCD_APPLICATION_FILE}'
    - name: git-add-commit
      run: |-
        git add "${ARGOCD_APPLICATION_FILE}"
        git commit -m "${GIT_COMMIT_MESSAGE}"
    - uses: actions-js/push@v1.5
      with:
        branch: ""
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: argocd-login
      run: |-
        argocd login \
          --core \
        	--grpc-web \
          ;
    - name: argocd-upsert
      run: |-
        argocd app create \
          --grpc-web \
          --upsert \
          --file "${ARGOCD_APPLICATION_FILE}" \
          ;
    - name: argocd-sync
      run: |-
        argocd app sync \
          --grpc-web \
          --timeout 300 \
          ;
